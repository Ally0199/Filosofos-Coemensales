{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red0\green185\blue185;\red2\green168\blue148;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs20 \cb3\cf13 #include <iostream>
\par #include <cstdlib>
\par #include <windows.h>
\par #define NumFilosofos 5
\par #define NumPalillos NumFilosofos
\par #define MinDeComidas 6
\par 
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par 
\par \cb3\cf5 //Indicara el estado del Filosofo (Pensando o Comiendo
\par \cb3\cf11\b int \b0\cb1\cf0 Filosofos\cb3\cf22 [\cb1\cf0 NumFilosofos\cb3\cf22 ];
\par \cb3\cf5 //General el total de Turnos
\par \cb3\cf11\b int \b0\cb1\cf0 TotalTurnos \cb3\cf22 = \cb1\cf0 NumFilosofos \cb3\cf22 / \cb3\cf9 2\cb3\cf22 ;
\par \cb3\cf5 //Guarda el ID de los Filosofos que pueden comer
\par \cb3\cf11\b int \b0\cb1\cf0 Turnos\cb3\cf22 [\cb1\cf0 NumFilosofos \cb3\cf22 / \cb3\cf9 2\cb3\cf22 ];
\par \cb3\cf5 //Guarda las Comidas hechas por cada Filosofo
\par \cb3\cf11\b int \b0\cb1\cf0 ContadorComidas\cb3\cf22 [\cb1\cf0 NumFilosofos\cb3\cf22 ];
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 DuracionDelTurno \cb3\cf22 = \cb3\cf9 2\cb3\cf22 ;
\par 
\par \cb3\cf5 //Esta funcion recibe como parametro el IdFilosofoInicial que en main es idPrimerFilosofo
\par \cb3\cf11\b void \b0\cb1\cf0 AsignarTurnos\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 IdFilosofoInicial\cb3\cf22 )
\par \{
\par     \cb3\cf5 //En el arreglo se guarda el ID del Filoso Inicial
\par     \cb1\cf0 Turnos\cb3\cf22 [\cb3\cf9 0\cb3\cf22 ] = \cb1\cf0 IdFilosofoInicial\cb3\cf22 ;
\par 
\par     \cb3\cf5 //Este for se encargara de llenar la segunda casilla de turno
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 TotalTurnos\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par 
\par         \cb3\cf5 //Basicamente sera 2 numeros mayor al IdFilosofoInicial
\par         \cb3\cf11\b int \b0\cb1\cf0 idFilosofo \cb3\cf22 = \cb1\cf0 Turnos\cb3\cf22 [\cb1\cf0 i \cb3\cf22 - \cb3\cf9 1\cb3\cf22 ] + \cb3\cf9 2\cb3\cf22 ;
\par 
\par         \cb3\cf5 //Si el segundo turno es 5 o 6, entonces estos se volveran 0 u 1 respectivamente
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 idFilosofo \cb3\cf22 == \cb1\cf0 NumFilosofos\cb3\cf22 )
\par         \{
\par             \cb1\cf0 idFilosofo \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \} \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 idFilosofo \cb3\cf22 ==  \cb1\cf0 NumFilosofos \cb3\cf22 + \cb3\cf9 1\cb3\cf22 )
\par         \{
\par             \cb1\cf0 idFilosofo \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par         \}
\par         \cb3\cf5 //Se agrega el segundo ID en turno
\par         \cb1\cf0 Turnos\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] = \cb1\cf0 idFilosofo\cb3\cf22 ;
\par     \}
\par \}
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 TerminoDeComida\cb3\cf22 ()\{
\par     \cb3\cf5 //Incrementa el contador de comidas para aquellos que esten comiendo
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 f \cb3\cf22 : \cb1\cf0 Turnos\cb3\cf22 )
\par     \{
\par         \cb1\cf0 ContadorComidas\cb3\cf22 [\cb1\cf0 f\cb3\cf22 ]++;
\par     \}
\par \}
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 VerificarCantidadDeComidas\cb3\cf22 ()
\par \{
\par     \cb3\cf5 //Recorre el arreglo para ver si todos comieron 6 veces, si comieron las 6 veces restorna un 1 de lo contrario un 0
\par     \cb3\cf11\b int \b0\cb1\cf0 TodosComieron \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 : \cb1\cf0 ContadorComidas\cb3\cf22 )
\par     \{
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 c \cb3\cf22 < \cb1\cf0 MinDeComidas\cb3\cf22 )
\par         \{
\par             \cb1\cf0 TodosComieron \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par             \cb3\cf11\b break\b0\cb3\cf22 ;
\par         \}
\par     \}
\par     \cb3\cf11\b return \b0\cb1\cf0 TodosComieron\cb3\cf22 ;
\par \}
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 ImprimirPalillos\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 IdFilosofo\cb3\cf22 )
\par \{
\par     \cb3\cf5 //Imprime los palillos usados por los Filosofos
\par     \cb3\cf11\b int \b0\cb1\cf0 PalilloDer \cb3\cf22 = \cb1\cf0 IdFilosofo\cb3\cf22 ;
\par     \cb3\cf11\b int \b0\cb1\cf0 PalilloIzq \cb3\cf22 = \cb1\cf0 IdFilosofo \cb3\cf22 + \cb3\cf9 1\cb3\cf22 ;
\par     \cb3\cf5 //Si el palillo izquierdo es igual a 5, entonces se volvera 0
\par     \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 PalilloIzq \cb3\cf22 == \cb1\cf0 NumPalillos\cb3\cf22 )
\par     \{
\par         \cb1\cf0 PalilloIzq \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par     \}
\par 
\par     \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "Con los palillos " \cb3\cf22 << \cb1\cf0 PalilloDer \cb3\cf22 << \cb3\cf17 " y " \cb3\cf22 << \cb1\cf0 PalilloIzq \cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par \}
\par 
\par 
\par \cb3\cf11\b void \b0\cb1\cf0 ImprimirEstadoFilosofos\cb3\cf22 ()\{
\par     \cb3\cf5 //Recorre a los Filosofos para imprimir su estado
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i \cb3\cf22 < \cb1\cf0 NumFilosofos\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par     \{
\par         \cb3\cf11\b int \b0\cb1\cf0 EstaComiendo \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 f \cb3\cf22 : \cb1\cf0 Turnos\cb3\cf22 )
\par         \{
\par             \cb3\cf5 //Aquellos que tengan su turno de comer imprimira que esta comiendo y las comidas que lleva
\par             \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 i \cb3\cf22 == \cb1\cf0 f\cb3\cf22 )
\par             \{
\par                 \cb1\cf0 EstaComiendo \cb3\cf22 = \cb3\cf9 1\cb3\cf22 ;
\par                 \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "El filosofo " \cb3\cf22 << \cb1\cf0 i \cb3\cf22 << \cb3\cf17 " esta comiendo"\cb3\cf22 ;
\par                 \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 " | Lleva "\cb3\cf22 << \cb1\cf0 ContadorComidas\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] << \cb3\cf17 " comidas"\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par                 \cb1\cf0 ImprimirPalillos\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par                 \cb3\cf11\b break\b0\cb3\cf22 ;
\par             \}
\par         \}
\par         \cb3\cf5 //Si el Filosofo en el recorrido no esta comiendo entonces imprime lo siguiente
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 EstaComiendo \cb3\cf22 == \cb3\cf9 0\cb3\cf22 )
\par         \{
\par             \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "El filosofo " \cb3\cf22 << \cb1\cf0 i \cb3\cf22 << \cb3\cf17 " esta pensando | Lleva "\cb3\cf22 << \cb1\cf0 ContadorComidas\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ] << \cb3\cf17 " comidas"\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par         \}
\par     \}
\par 
\par     \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par \}
\par 
\par \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()
\par \{
\par     \cb3\cf11\b int \b0\cb1\cf0 idPrimerFilosofo \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par 
\par     \cb3\cf5 //El ciclo se mantendra hasta que todos coman minimo 6 veces
\par     \cb3\cf11\b while\b0\cb3\cf22 (!\cb1\cf0 VerificarCantidadDeComidas\cb3\cf22 ())\{
\par 
\par         \cb1\cf0 AsignarTurnos\cb3\cf22 (\cb1\cf0 idPrimerFilosofo\cb3\cf22 );
\par 
\par         \cb1\cf0 ImprimirEstadoFilosofos\cb3\cf22 ();
\par 
\par         \cb1\cf0 Sleep\cb3\cf22 (\cb1\cf0 DuracionDelTurno\cb3\cf22 );
\par 
\par         \cb1\cf0 TerminoDeComida\cb3\cf22 ();
\par 
\par         \cb1\cf0 idPrimerFilosofo\cb3\cf22 ++;
\par         \cb3\cf5 //Si el primer filosofo en el turno llega a ser 5, este cambiara a 0
\par         \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 idPrimerFilosofo \cb3\cf22 == \cb1\cf0 NumFilosofos\cb3\cf22 ) \{
\par             \cb1\cf0 idPrimerFilosofo \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par         \}
\par     \}
\par 
\par     \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "Estado final: " \cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par 
\par     \cb3\cf11\b int \b0\cb1\cf0 i \cb3\cf22 = \cb3\cf9 0\cb3\cf22 ;
\par 
\par     \cb3\cf5 //Recorre el arreglo de Contador de comidas e imprime sus datos
\par     \cb3\cf11\b for\b0\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 c \cb3\cf22 : \cb1\cf0 ContadorComidas\cb3\cf22 )
\par     \{
\par         \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "El filosofo " \cb3\cf22 << \cb1\cf0 i \cb3\cf22 << \cb3\cf17 " comio "\cb3\cf22 << \cb1\cf0 c \cb3\cf22 << \cb3\cf17 " comidas"\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par         \cb1\cf0 i\cb3\cf22 ++;
\par     \}
\par     \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par 
\par     \cb3\cf13\b cout \b0\cb3\cf22 << \cb3\cf17 "Todos los Filosofos han comido minimo " \cb3\cf22 << \cb1\cf0 MinDeComidas \cb3\cf22 << \cb3\cf17 " veces" \cb3\cf22 << \cb3\cf13\b endl \b0\cb3\cf22 << \cb3\cf13\b endl\b0\cb3\cf22 ;
\par 
\par     \cb3\cf11\b return \b0\cb3\cf9 0\cb3\cf22 ;
\par \}
\par 
\par }